<?xml version="1.0"?>
<!DOCTYPE simulator [
<!ATTLIST algorithm id ID #IMPLIED>
<!ATTLIST problem id ID #IMPLIED>
<!ATTLIST measurements id ID #IMPLIED>
]>
<simulator>

  <algorithm id="ANPSO" class="pso.MultiPopPSO">
    <addStoppingCondition class="stoppingcondition.MeasuredStoppingCondition">
      <predicate class="stoppingcondition.Maximum"/>
      <target value="100000"/>
      <measurement class="measurement.single.ParticlePositionUpdates"/>
    </addStoppingCondition>

    <initialisationStrategy class="algorithm.initialisation.ClonedPopulationInitialisationStrategy">
      <entityType class="pso.particle.StandardParticle">
        <behaviour class="pso.behaviour.StandardParticleBehaviour">
          <velocityProvider class="pso.velocityprovider.ConstrictionVelocityProvider">
            <constrictionCoefficient class="controlparameter.ConstantControlParameter" parameter="0.729843788"/>
            <cognitiveAcceleration class="controlparameter.ConstantControlParameter" parameter="1.496"/>
            <socialAcceleration class="controlparameter.ConstantControlParameter" parameter="1.496"/>
          </velocityProvider>
          <boundaryConstraint class="problem.boundaryconstraint.ClampingBoundaryConstraint"/>
        </behaviour>
      </entityType>
      <entityNumber value="100"/>
    </initialisationStrategy>

    <iterationStrategy class="niching.iterationstrategies.EnhancedSpeciation">
      <setDelegate class="niching.iterationstrategies.AdaptiveNichingIterationStrategy">
        <nicheIterMin class="controlparameter.ConstantControlParameter" parameter="2"/>
        <nicheIterLength class="controlparameter.ConstantControlParameter" parameter="2"/>
        <pMax class="controlparameter.ConstantControlParameter" parameter="10"/>
      </setDelegate>
    </iterationStrategy>

    <neighbourhood class="entity.topologies.NichingLabeledNeighbourhood" >
      <unNichedTopology class="controlparameter.ConstantControlParameter" parameter="2"/>
    </neighbourhood>
  </algorithm>

  <measurements id="fitness" class="simulator.MeasurementSuite" resolution="5000">
    <addMeasurement class="measurement.multiple.NicheCount">
      <filter class="measurement.multiple.filter.MultiPopulationFilter">
        <nicheProvider class="measurement.multiple.filter.NBestNicheProvider"/>
      </filter>
    </addMeasurement>
    <addMeasurement class="measurement.multiple.AverageGradientLength">
      <filter class="measurement.multiple.filter.MultiPopulationFilter">
        <nicheProvider class="measurement.multiple.filter.NBestNicheProvider"/>
      </filter>
    </addMeasurement>
  </measurements>

    <problems>
      <problem id="f1" class="problem.FunctionOptimisationProblem" domain="R(0.0:1.0)">
        <objective class="problem.objective.Maximise"/>
        <function class="functions.continuous.unconstrained.EqualMaxima"/>
      </problem>
      <problem id="f2" class="problem.FunctionOptimisationProblem" domain="R(0.0:1.0)">
        <objective class="problem.objective.Maximise"/>
        <function class="functions.continuous.unconstrained.EvenDecreasingMaxima"/>
      </problem>
      <problem id="f3" class="problem.FunctionOptimisationProblem" domain="R(0.0:1.0)">
        <objective class="problem.objective.Maximise"/>
        <function class="functions.continuous.unconstrained.UnevenEqualMaxima"/>
      </problem>
      <problem id="f4" class="problem.FunctionOptimisationProblem" domain="R(0.0:1.0)">
        <objective class="problem.objective.Maximise"/>
        <function class="functions.continuous.unconstrained.UnevenDecreasingMaxima"/>
      </problem>
      <problem id="f5" class="problem.FunctionOptimisationProblem" domain="R(-5.0:5.0)^2">
        <objective class="problem.objective.Maximise"/>
        <function class="functions.continuous.unconstrained.Himmelblau"/>
      </problem>
    </problems>

    <simulation samples="30">
      <algorithm idref="ANPSO"/>
      <problem idref="f1"/>
      <measurements idref="fitness"/>
      <output format="TXT" file="data/anpso_f1.txt"/>
    </simulation>
</simulator>
